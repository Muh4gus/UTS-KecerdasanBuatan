{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOOYSlZIUPHgs0J2PN0q/Sn",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Muh4gus/UTS-KecerdasanBuatan/blob/main/Soal_1_.txt\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "-----------------------------------------\n",
        "1.  Aturan (Rule-based system):\n",
        "\n",
        "- Jika daun menguning dan tanaman layu → maka kemungkinan terkena hama ulat tanah.\n",
        "\n",
        "- Jika terdapat bercak hitam dan daun menguning → maka kemungkinan terkena hama jamur.\n",
        "\n",
        "- Jika daun berlubang → maka kemungkinan terkena hama ulat daun.\n",
        "\n",
        "- Jika daun berlubang dan terdapat bercak hitam → maka kemungkinan terkena hama kumbang daun."
      ],
      "metadata": {
        "id": "nashdQ4Kpd8H"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "----------------------\n",
        "2. Logika Proposisional\n",
        "\n",
        "Misal:\n",
        "\n",
        "A = daun menguning\n",
        "\n",
        "B = terdapat bercak hitam\n",
        "\n",
        "C = daun berlubang\n",
        "\n",
        "D = tanaman layu\n",
        "\n",
        "H1 = ulat tanah\n",
        "\n",
        "H2 = jamur\n",
        "\n",
        "H3 = ulat daun\n",
        "\n",
        "H4 = kumbang daun\n",
        "\n",
        "Aturan dalam logika proposisional:\n",
        "\n",
        "1. (A ∧ D) → H1\n",
        "\n",
        "2. (B ∧ A) → H2\n",
        "\n",
        "3. C → H3\n",
        "\n",
        "4. (C ∧ B) → H4\n",
        "\n"
      ],
      "metadata": {
        "id": "xkUVBcwvqVb1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "-------------------------\n",
        "3. Pseudecode\n",
        "\n",
        "Input: Gejala tanaman (A, B, C, D)\n",
        "Output: Jenis hama\n",
        "\n",
        "IF A AND D THEN\n",
        "\n",
        "    Hama = \"Ulat Tanah\"\n",
        "ELSE IF B AND A THEN\n",
        "\n",
        "    Hama = \"Jamur\"\n",
        "ELSE IF C AND B THEN\n",
        "\n",
        "    Hama = \"Kumbang Daun\"\n",
        "ELSE IF C THEN\n",
        "\n",
        "    Hama = \"Ulat Daun\"\n",
        "ELSE\n",
        "\n",
        "    Hama = \"Tidak diketahui\"\n"
      ],
      "metadata": {
        "id": "T8z9oNOprHcN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "------------------------\n",
        "4. Code python"
      ],
      "metadata": {
        "id": "eRx_IvvJrXR9"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lJWXZN_4otZj",
        "outputId": "e2cf8c9e-92ed-4b74-fa95-5c1b79684790"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Jenis hama: Ulat Tanah (CF: 0.8)\n"
          ]
        }
      ],
      "source": [
        "def min_cf(cf1, cf2):\n",
        "    return min(cf1, cf2)\n",
        "\n",
        "def deteksi_hama_cf(gejala_input):\n",
        "    # Daftar gejala yang benar-benar terjadi (bernilai True)\n",
        "    gejala = {g: v for g, v in gejala_input.items() if v}\n",
        "\n",
        "    hasil = {}\n",
        "\n",
        "    # Aturan 1: daun menguning ∧ tanaman layu → ulat tanah (CF 0.8)\n",
        "    if gejala_input[\"daun_menguning\"] and gejala_input[\"tanaman_layu\"]:\n",
        "        cf = min_cf(1.0, 1.0) * 0.8\n",
        "        hasil[\"Ulat Tanah\"] = cf\n",
        "\n",
        "    # Aturan 2: bercak hitam ∧ daun menguning → jamur (CF 0.7)\n",
        "    if gejala_input[\"bercak_hitam\"] and gejala_input[\"daun_menguning\"]:\n",
        "        cf = min_cf(1.0, 1.0) * 0.7\n",
        "        hasil[\"Jamur\"] = cf\n",
        "\n",
        "    # Aturan 3: daun berlubang → ulat daun (CF 0.6)\n",
        "    if gejala_input[\"daun_berlubang\"]:\n",
        "        cf = 1.0 * 0.6\n",
        "        hasil[\"Ulat Daun\"] = cf\n",
        "\n",
        "    # Aturan 4: daun berlubang ∧ bercak hitam → kumbang daun (CF 0.75)\n",
        "    if gejala_input[\"daun_berlubang\"] and gejala_input[\"bercak_hitam\"]:\n",
        "        cf = min_cf(1.0, 1.0) * 0.75\n",
        "        hasil[\"Kumbang Daun\"] = cf\n",
        "\n",
        "    # Menentukan hasil dengan CF tertinggi\n",
        "    if hasil:\n",
        "        hama_terdeteksi = max(hasil, key=hasil.get)\n",
        "        return hama_terdeteksi, hasil[hama_terdeteksi]\n",
        "    else:\n",
        "        return \"Tidak diketahui\", 0.0\n",
        "\n",
        "# Contoh input gejala\n",
        "gejala_input = {\n",
        "    \"daun_menguning\": True,\n",
        "    \"bercak_hitam\": False,\n",
        "    \"daun_berlubang\": False,\n",
        "    \"tanaman_layu\": True\n",
        "}\n",
        "\n",
        "hasil, cf = deteksi_hama_cf(gejala_input)\n",
        "print(f\"Jenis hama: {hasil} (CF: {cf})\")\n"
      ]
    }
  ]
}